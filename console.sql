<<<<<<< HEAD
#数据库复习 SQL语句

#1.创建数据库
CREATE DATABASE DBTEST;

#2.删除数据库
DROP DATABASE DBTEST;

#3.创建新表
USE DBTEST;
CREATE TABLE USER(
    USERNAME VARCHAR(50) NOT NULL,
    USER_ID INT PRIMARY KEY,
    EMAIL VARCHAR(50) UNIQUE NOT NULL,
    PASSWORD VARCHAR(50) NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

#4.删除新表
DROP TABLE USER;

#5.增加一个列
ALTER TABLE USER ADD COLUMN AGE INT;

#6.添加与删除主键（注意新增时主键唯一，删除时无需指定列名）
ALTER TABLE USER ADD PRIMARY KEY (USER_ID);
ALTER TABLE USER DROP PRIMARY KEY;

#7.创建索引（不允许更改）
CREATE INDEX index_username on USER(USERNAME);
DROP INDEX index_username on USER;

#8.创建与删除视图
CREATE VIEW user_view AS
SELECT USERNAME,EMAIL,AGE
FROM USER;
Drop VIEW user_view;

#9.选择语句
#9.1 选择所有列
SELECT * FROM USER;
#9.2 选择特定列
SELECT USERNAME,EMAIL,AGE
FROM USER;
#9.3 使用WHERE进行条件筛选
SELECT USERNAME,EMAIL,AGE
FROM USER
WHERE AGE>30 AND USER_ID <10;
#9.4 排序结果
SELECT USERNAME,EMAIL,AGE
FROM USER
ORDER BY AGE DESC;
#9.5 使用LIMIT限制结果数量
SELECT USERNAME,EMAIL,AGE
FROM USER
LIMIT 10;
#9.6 去重查询
SELECT DISTINCT AGE
FROM USER;
#9.7 聚合函数
SELECT COUNT(*),SUM(AGE),AVG(AGE),MAX(AGE),MIN(AGE)
FROM USER;
#9.8 分组查询
SELECT USERNAME,MAX(AGE),COUNT(*)
FROM USER
GROUP BY USERNAME;
#9.9 过滤分组结果
SELECT MAX(AGE),COUNT(*)
FROM USER
GROUP BY USERNAME
HAVING COUNT(*)<5;
#9.10 JOIN连接查询 INNER / LEFT / RIGHT
SELECT u.USERNAME,u.EMAIL,o.PRODUCT_NAME,o.QUANTITY,o.TOTAL_PRICE
FROM USER u
INNER JOIN `order` o ON u.USER_ID = o.USER_ID;

SELECT u.USERNAME,u.EMAIL,o.PRODUCT_NAME,o.QUANTITY,o.TOTAL_PRICE
FROM USER u
LEFT JOIN `order` o ON u.USER_ID = o.USER_ID;

SELECT u.USERNAME,u.EMAIL,o.PRODUCT_NAME,o.QUANTITY,o.TOTAL_PRICE
FROM USER u
RIGHT JOIN `order` o ON u.USER_ID = o.USER_ID;
#9.11 子查询
SELECT USERNAME,
(SELECT COUNT(*) FROM `order` WHERE `order`.USER_ID = U.USER_ID) AS NUM
FROM USER U;
#9.12 CASE语句
SELECT USERNAME,
       CASE
           WHEN AGE <25 THEN 'SMALL'
           WHEN AGE BETWEEN 25 AND 30 THEN 'MIDDLE'
           ELSE 'BIG'
        END AS AGE_GROUP
FROM USER;
#9.13 UNION联合查询
SELECT USERNAME FROM USER
UNION
SELECT PRODUCT_NAME FROM `order`;

#10.插入语句
#10.1 基本的插入语句
INSERT INTO USER(USER_ID,USERNAME,EMAIL,PASSWORD,AGE)
VALUES (7,'JESPER','12@123',123,3);
#10.2 INSERT不指定列名
INSERT INTO `order`
VALUES(10,1,'CLOTH',10,100);
#10.3 批量插入多条记录
INSERT INTO USER(USER_ID,USERNAME,EMAIL,PASSWORD,AGE)
VALUES
    (10,'JESPER','1223@123',123,3),
    (8,'JESPER','1232@123',123,3),
    (9,'JESPER','12321@123',123,3);
#10.4 INSERT使用子查询插入数据
INSERT INTO USER(USERNAME,EMAIL,AGE)
SELECT USERNAME,EMAIL,AGE
FROM USER
WHERE AGE>25;
#10.5 忽略错误的插入
INSERT IGNORE INTO USER(USERNAME,AGE)
VALUES('JESPER',20);
#10.6 REPLACE INTO
REPLACE INTO USER(USER_ID,USERNAME,EMAIL,PASSWORD,AGE)
VALUES(1,'NOVA','2131@121','142423',34);

#11. 更新语句
#11.1 基本的UPDATE语句
UPDATE USER
SET AGE = 30
WHERE USERNAME = 'JESPER';
#11.2 更新多列
UPDATE USER
SET AGE = 40 AND EMAIL = '1919@810'
WHERE USER_ID = 1;
#11.3 更新所有记录
UPDATE USER
SET AGE = 10;
#11.4 条件更新
UPDATE USER
SET USERNAME = 'JESPER'
WHERE AGE > 30;
#11.5 使用子查询更新
UPDATE USER
SET AGE = (SELECT MAX(ORDER_ID) FROM `ORDER` WHERE USER.USER_ID = `ORDER`.USER_ID);
#11.6 批量更新
UPDATE USER
SET AGE = CASE
    WHEN USER_ID < 4 THEN 20
    WHEN USER_ID BETWEEN 4 AND 6 THEN 30
    ELSE 40
END;
#11.7 自增或自减列值
UPDATE USER
SET AGE = AGE+1;
UPDATE USER
SET AGE = AGE -10
WHERE AGE>30;
#11.8更新带JOIN的表
UPDATE order AS o
    JOIN user AS u ON o.user_id = u.user_id
SET o.user_id = u.user_id
WHERE u.age < 30;
#11.9 带LIMIT 和 ORDER BY的更新
UPDATE USER
SET AGE = 20
ORDER BY CREATED_AT ASC
LIMIT 5;

#12. 删除语句
#12.1 基本的删除语句
DELETE FROM USER
WHERE USER_ID = 1;
#12.2 删除所有记录
DELETE FROM `ORDER`
WHERE USER_ID BETWEEN 1 AND 10;
#12.3 带子查询的DELETE
DELETE FROM USER
WHERE USER_ID IN (SELECT USER_ID FROM `ORDER`
WHERE total_price > 10);
#12.4 带JOIN的DELETE
DELETE USER
FROM USER
LEFT JOIN `ORDER` ON USER.USER_ID = `ORDER`.user_id
WHERE `ORDER`.order_id IS NULL;
#12.5 带LIMIT的删除
DELETE FROM USER
WHERE AGE>10
LIMIT 2;
#12.6 带ORDER BY 的DELETE
DELETE FROM USER
ORDER BY CREATED_AT DESC
LIMIT 2;
#12.7 使用外键约束的DELETE
ALTER TABLE `ORDER`
    ADD CONSTRAINT USER_ID
        FOREIGN KEY (USER_ID)
            REFERENCES USER(USER_ID)
            ON DELETE cascade;
#12.8 DELETE并返回删除的记录
#无法支持DELETE的RETURNING*

#12.9 DELETE与事务操作
START TRANSACTION;
DELETE FROM USER
WHERE AGE>20;
COMMIT;
#12.10 DELETE 删除特定的记录
DELETE FROM USER
WHERE AGE>=10 AND EMAIL LIKE '1@2';

#13 高级查询语句
#13.1 窗口函数
SELECT USERNAME,AGE,
       RANK() OVER (ORDER BY AGE DESC) AS AGE_RANK
FROM USER;
#13.2 分区聚合查询
SELECT USERNAME,AGE,SUM(AGE) OVER
    (PARTITION BY USERNAME) AS AGE_SUM
FROM USER;
#13.3 全文搜素
SELECT * FROM USER
WHERE MATCH(USERNAME,EMAIL) AGAINST('USER_ID');
#13.4 递归查询
#不做要求
#13.5 交叉连接
SELECT U.USERNAME,O.PRODUCT_NAME
FROM USER U
CROSS JOIN `ORDER` O;

#14 高级数据操作
#14.1 创建触发器
CREATE TRIGGER before_insert
    BEFORE INSERT ON USER
    FOR EACH ROW
    SET NEW.CREATED_AT = NOW();
#14.2 创建存储过程
DELIMITER //
CREATE PROCEDURE GETUSERS()
BEGIN
       SELECT * FROM USER;
END //
DELIMITER ;
#14.3 调用存储过程
CALL GETUSERS();
#14.4 创建函数
DELIMITER //
CREATE FUNCTION CALAGE(AGE INT)
RETURNS INT
DETERMINISTIC
BEGIN
    RETURN 60 - AGE;
END //
DELIMITER ;
#14.5 使用自定义的函数
SELECT USERNAME,CALAGE(AGE) AS RETURN_AGE
FROM USER;
#14.6 导入CSV数据
LOAD DATA INFILE '****'
INTO TABLE USER
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
IGNORE 1 ROWS;
#14.7 导出数据为文件
SELECT * FROM USER
INTO OUTFILE 'DATA.CSV'
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\N';

#数据库操作管理
#15.1 查看所有数据库
SHOW DATABASES;
#15.2 查看当前所使用的数据库
SELECT DATABASE();
#15.3 查看所有表
SHOW TABLES;
#15.4 查看表结构
DESCRIBE USER;
#15.5 查看表的创建语句
SHOW CREATE TABLE USER;
#15.6 查看索引
SHOW INDEX FROM USER;
#15.7 清空表数据
TRUNCATE TABLE USER;
#15.8 重命名表
RENAME TABLE `ORDERS` TO 'ORDER';
#15.9 备份表数据
CREATE TABLE USER_BACKUP AS
SELECT * FROM USER;
#15.10 删除重复记录
DELETE u1
FROM USER u1
         LEFT JOIN (
    SELECT MIN(USER_ID) AS USER_ID
    FROM USER
    GROUP BY EMAIL
) u2 ON u1.USER_ID = u2.USER_ID
WHERE u2.USER_ID IS NULL;
#第二种实现
DELETE FROM USER
WHERE USER_ID NOT IN (
    SELECT USER_ID
    FROM (SELECT MIN(USER_ID) AS USER_ID FROM USER GROUP BY EMAIL) temp_user
);
#16 安全与权限
#16.1 创建用户
CREATE USER 'NEW@LOCALHOST' IDENTIFIED BY 'PASSWORD';
#16.2 授予权限
GRANT ALL PRIVILEGES ON DBTEST.* TO 'NEW@LOCALHOST';
#16.3 查看用户权限
SHOW GRANTS FOR 'NEW@LOCALHOST';
#16.4 撤销权限
REVOKE ALL PRIVILEGES ON DBTEST.* FROM 'NEW@LOCALHOST';
#16.5 删除用户
DROP USER 'NEW@LOCALHOST';

#17.性能优化与工具
#17.1 分析查询性能
EXPLAIN SELECT * FROM USER WHERE AGE > 30;
#17.2 查看服务器状态
SHOW STATUS;
#17.3 设置变量
SET GLOBAL MAX_CONNECTIONS = 200;
#17.4 临时禁用外键约束
SET FOREIGN_KEY_CHECKS = 0;
#17.5 恢复外键约束
SET FOREIGN_KEY_CHECKS = 1;
#18 事务管理
#18.1 开启事务
START TRANSACTION;
#18.2 提交事务
COMMIT;
#18.3 回滚事务
ROLLBACK;
#18.4 保存点
SAVEPOINT NAME;
#18.5 回滚到保存点
ROLLBACK TO NAME;

#19 日志与审计
#19.1 启用查询日志
SET GLOBAL general_log = 'ON';
#19.2 查看慢查询日志
SHOW VARIABLES LIKE 'SLOW_QUERY_LOG';
#19.3 查看错误日志
SHOW VARIABLES LIKE 'LOG_ERROR';

#20 数据类型操作
#20.1 修改列的数据类型
ALTER TABLE USER
MODIFY AGE BIGINT;
#20.2 修改列名
ALTER TABLE USER
CHANGE AGE USER_AGE INT;
#20.3 添加默认值
ALTER TABLE USER
ALTER COLUMN USER_AGE SET DEFAULT 20;
#20.4 删除默认值
ALTER TABLE USER
ALTER COLUMN USER_AGE DROP DEFAULT;




INSERT INTO USER(USERNAME,USER_ID,EMAIL,PASSWORD,AGE)
VALUES
    ('TOM',10,'1@2','123',10),
    ('BOB',11,'1@2','234',11),
    ('ALICE',12,'1@2','345',12);


=======

>>>>>>> 72ba92d456f1b5b3096b30579c5d27ef6eba67e1
